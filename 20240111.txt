=============================
markdown(html의 m과 같은뜻)
마크업언어(로직이 안들어감,태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지)

마크다운 = readme(깃에서 뭘할지 설명) 필수는 아니다

markdown
정렬 안됨 스타일 변경X(마크업언어라)

vscode에서 작성하는법
 1. 터미널에서 touch readme.md 이런식

mm에서 질문할때
ex)
```python
print('hello')
```

마크다운 문법 안배우는 이유?
공식문서가 있어서(https://www.markdownguide.org/basic-syntax/)

=================================
CLI(command line interface)
명령어를 통해 사용자와 컴퓨터가 상호작용하는 방식

bash에서 git 사용을 주로 많이 씀(gitbash)
git을 다룰때 interface
gui : github desktop(기능이 적음), 아틀라시안 제품인 '소스트리' <---최고
CLI : git bash

gui 장점 : 보기편하고 친숙하고 기능 다있고 
가장 큰 장점은 graph를 훨씬 보기 좋다, diff 파일 비교 -> 복잡한 분석 gui!!
CLI 장점 : commit, push 명령어 1초면 끝(GUI - 비교적 오래걸림)
	20년전 배운게 지금도 쓰고있고 앞으로도 쓸예정(불변성)

결론 - 대부분 CLI를 사용하지만 diff나 graph는 gui 쓴다


=======================================

mingw64
: 윈도우에서 리눅스에서 쓰는 툴들을 쓸 수 있게 가볍게 만든 프로젝트

CLI에서 가장 중요한것 - 내가 어디 있는지 알아야한다(경로)

~= 리눅스는 항상홈디렉토리
cd ~ : 홈 리덱터리
cd - : 뒤로가기
cd .. : 상위폴더
======================
touch 파일생성
mkdir 폴더생성
ls 파일 탐색

배쉬의 장점 탭 자동완성 

===========================
vs코드 단축키

ctrl `, ctrl j 터미널열기
ctrl w 닫기
ctrl shift f 전체 찾기
shift tab 들여쓰기 취소
alt 누른 상태에서 마우스 좌클릭: 동시에 여러개의 커서
ctrl a 전체블록지정
ctrl c 터미널 강제종료
ctrl shift c 터미널복사
#은 한줄한줄 주석 드래그후 ctrl / 주석

shift insert : 터미널에 붙어넣기


나머지는 수업 같이 진행하면서

==========================
git = 중앙 집중식과 분산구조가 존재 분산관리 시스템, 이전 관리 이력들을 다 가지고 있음

제어판 window 자격증명관리 github삭제 

git 역할= 
1.commit 작성자 설정
git init
git config --global user.name 김혁
git config --global user.mail kimh0716@gmail.com
git config --global -1

3. add
git add.
git status

4.commit
git commit -m "1월 11일 연습"
git log

5.push
git remote add origin
git remote -v 
git push -u origin master
git push origin +master
==================
master는 branch는 master로 설정되어있다. : git 기본 브랜치는 항상 master로 설정
branch란 코드를 개발하거나 수정하는 데에 사용되는 작업공간
HEAD > master
HEAD: 현재 작업중인 커밋
master: head가 가리키는 브랜치명
======================================

git : local repository(로컬 저장소)
github: remote repository(원격 저장소)

우리가 작업한것 worikng directory에 add를 통해 staging area(git status로 확인)에서 commit으로 repository(git log)
===================
ssafy에서는 gitlab 보안성때문 hub랑 다른애
github 사용 용도
1. 개인 프로젝트 작업 공간 (공부한 것 저장)
2, 포트폴리오
3. 프로젝트 협업
============================
내일 할 것 
gitignore
pull